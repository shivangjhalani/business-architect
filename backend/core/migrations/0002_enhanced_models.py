# Generated by Django 5.2.1 on 2025-06-02 17:58

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='businessgoal',
            options={'ordering': ['-submitted_at'], 'verbose_name': 'Business Goal', 'verbose_name_plural': 'Business Goals'},
        ),
        migrations.AlterModelOptions(
            name='capability',
            options={'ordering': ['level', 'name'], 'verbose_name': 'Business Capability', 'verbose_name_plural': 'Business Capabilities'},
        ),
        migrations.AlterModelOptions(
            name='capabilityrecommendation',
            options={'ordering': ['-recommended_by_ai_at'], 'verbose_name': 'Capability Recommendation', 'verbose_name_plural': 'Capability Recommendations'},
        ),
        migrations.AlterField(
            model_name='businessgoal',
            name='description',
            field=models.TextField(help_text='Detailed explanation of the business goal and its objectives', validators=[django.core.validators.MinLengthValidator(20, 'Description must be at least 20 characters long.')]),
        ),
        migrations.AlterField(
            model_name='businessgoal',
            name='pdf_file',
            field=models.FileField(blank=True, help_text='Optional PDF document with additional goal details', null=True, upload_to='business_goals/pdfs/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])]),
        ),
        migrations.AlterField(
            model_name='businessgoal',
            name='status',
            field=models.CharField(choices=[('PENDING_ANALYSIS', 'Pending Analysis'), ('ANALYZED', 'Analyzed'), ('RECOMMENDATIONS_APPLIED', 'Recommendations Applied'), ('CLOSED', 'Closed')], default='PENDING_ANALYSIS', help_text='Current status of the goal analysis process', max_length=30),
        ),
        migrations.AlterField(
            model_name='businessgoal',
            name='title',
            field=models.CharField(help_text='Brief, descriptive title for the business goal', max_length=255, validators=[django.core.validators.MinLengthValidator(5, 'Goal title must be at least 5 characters long.')]),
        ),
        migrations.AlterField(
            model_name='capability',
            name='description',
            field=models.TextField(help_text='Detailed explanation of what this capability encompasses', validators=[django.core.validators.MinLengthValidator(10, 'Description must be at least 10 characters long.')]),
        ),
        migrations.AlterField(
            model_name='capability',
            name='level',
            field=models.PositiveIntegerField(default=1, help_text='Hierarchy level (1 = top level, 2 = sub-capability, etc.)'),
        ),
        migrations.AlterField(
            model_name='capability',
            name='name',
            field=models.CharField(help_text='Unique name for the business capability', max_length=255, validators=[django.core.validators.MinLengthValidator(2, 'Capability name must be at least 2 characters long.')]),
        ),
        migrations.AlterField(
            model_name='capability',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional internal notes and comments', null=True),
        ),
        migrations.AlterField(
            model_name='capability',
            name='owner',
            field=models.CharField(blank=True, help_text='Business unit or individual responsible for this capability', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='capability',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Parent capability in the hierarchy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.capability'),
        ),
        migrations.AlterField(
            model_name='capability',
            name='status',
            field=models.CharField(choices=[('CURRENT', 'Current'), ('PROPOSED', 'Proposed'), ('DEPRECATED', 'Deprecated'), ('ARCHIVED', 'Archived')], default='CURRENT', help_text='Current status of the capability', max_length=20),
        ),
        migrations.AlterField(
            model_name='capability',
            name='strategic_importance',
            field=models.CharField(choices=[('CRITICAL', 'Critical'), ('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], default='MEDIUM', help_text='Strategic importance to the organization', max_length=20),
        ),
        migrations.AlterField(
            model_name='capabilityrecommendation',
            name='additional_details',
            field=models.TextField(blank=True, help_text="AI's detailed explanation and rationale for the recommendation", null=True),
        ),
        migrations.AlterField(
            model_name='capabilityrecommendation',
            name='applied_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when the recommendation was applied', null=True),
        ),
        migrations.AlterField(
            model_name='capabilityrecommendation',
            name='business_goal',
            field=models.ForeignKey(help_text='The business goal that triggered this recommendation', on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='core.businessgoal'),
        ),
        migrations.AlterField(
            model_name='capabilityrecommendation',
            name='proposed_description',
            field=models.TextField(blank=True, help_text='Proposed description for new or modified capability', null=True),
        ),
        migrations.AlterField(
            model_name='capabilityrecommendation',
            name='proposed_name',
            field=models.CharField(blank=True, help_text='Proposed name for new or modified capability', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='capabilityrecommendation',
            name='proposed_parent',
            field=models.ForeignKey(blank=True, help_text='Proposed parent capability for hierarchy changes', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='proposed_parent_recommendations', to='core.capability'),
        ),
        migrations.AlterField(
            model_name='capabilityrecommendation',
            name='recommendation_type',
            field=models.CharField(choices=[('ADD_CAPABILITY', 'Add Capability'), ('MODIFY_CAPABILITY', 'Modify Capability'), ('DELETE_CAPABILITY', 'Delete Capability'), ('STRENGTHEN_CAPABILITY', 'Strengthen Capability'), ('MERGE_CAPABILITIES', 'Merge Capabilities'), ('SPLIT_CAPABILITY', 'Split Capability')], help_text='Type of recommended action', max_length=30),
        ),
        migrations.AlterField(
            model_name='capabilityrecommendation',
            name='status',
            field=models.CharField(choices=[('PENDING', 'Pending'), ('APPLIED', 'Applied'), ('REJECTED', 'Rejected')], default='PENDING', help_text='Current status of the recommendation', max_length=20),
        ),
        migrations.AlterField(
            model_name='capabilityrecommendation',
            name='target_capability',
            field=models.ForeignKey(blank=True, help_text='Existing capability being targeted (for modify/delete/strengthen)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recommendations', to='core.capability'),
        ),
        migrations.AddIndex(
            model_name='businessgoal',
            index=models.Index(fields=['status', 'submitted_at'], name='core_busine_status_08f5c3_idx'),
        ),
        migrations.AddIndex(
            model_name='businessgoal',
            index=models.Index(fields=['title'], name='core_busine_title_ae698f_idx'),
        ),
        migrations.AddIndex(
            model_name='capability',
            index=models.Index(fields=['status', 'strategic_importance'], name='core_capabi_status_d9026d_idx'),
        ),
        migrations.AddIndex(
            model_name='capability',
            index=models.Index(fields=['parent', 'level'], name='core_capabi_parent__277f92_idx'),
        ),
        migrations.AddIndex(
            model_name='capability',
            index=models.Index(fields=['name'], name='core_capabi_name_c90319_idx'),
        ),
        migrations.AddIndex(
            model_name='capabilityrecommendation',
            index=models.Index(fields=['business_goal', 'status'], name='core_capabi_busines_8e6788_idx'),
        ),
        migrations.AddIndex(
            model_name='capabilityrecommendation',
            index=models.Index(fields=['recommendation_type', 'status'], name='core_capabi_recomme_c3d7fd_idx'),
        ),
        migrations.AddIndex(
            model_name='capabilityrecommendation',
            index=models.Index(fields=['target_capability'], name='core_capabi_target__6dc184_idx'),
        ),
        migrations.AddConstraint(
            model_name='capability',
            constraint=models.CheckConstraint(condition=models.Q(('level__gte', 1), ('level__lte', 10)), name='valid_capability_level'),
        ),
        migrations.AddConstraint(
            model_name='capability',
            constraint=models.UniqueConstraint(fields=('name', 'parent'), name='unique_capability_name_per_parent'),
        ),
        migrations.AddConstraint(
            model_name='capabilityrecommendation',
            constraint=models.CheckConstraint(condition=models.Q(('status', 'PENDING'), ('applied_at__isnull', False), _connector='OR'), name='applied_recommendations_have_timestamp'),
        ),
    ]
